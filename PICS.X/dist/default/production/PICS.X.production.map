Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

--edf=/opt/microchip/xc8/v1.33/dat/en_msgs.txt -cs \
  -h+dist/default/production/PICS.X.production.sym \
  --cmf=dist/default/production/PICS.X.production.cmf -z -Q16F886 \
  -o/tmp/cgtoR4me9 -Mdist/default/production/PICS.X.production.map -E1 \
  -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 \
  -ASTRING=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/cgtI3Nz6v.obj \
  dist/default/production/PICS.X.production.obj 

Object code version is 3.11

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
/tmp/cgtI3Nz6v.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production/PICS.X.production.obj
                cinit                                15       15       14        8       0
                intentry                              4        4        E        8       0
                text7                               203      203       3A        8       0
                text6                                29       29       CE        8       0
                text5                               27A      27A        8        8       0
                text4                               25E      25E       14        8       0
                text3                               23D      23D       21        8       0
                text2                               166      166       53        8       0
                text1                               1B9      1B9       4A        8       0
                maintext                             F7       F7       6F        8       0
                cstackBANK0                          31       31        5       20       1
                cstackCOMMON                         70       70        B       70       1
                clrtext                             272      272        8        8       0
                bssBANK1                             A0       A0       40       A0       1
                bssBANK0                             20       20       11       20       1
                bssCOMMON                            7D       7D        1       70       1
                nvBANK0                              36       36        2       20       1
                nvCOMMON                             7B       7B        2       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       14         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text7                               203      203       3A         0
                text6                                29       29       CE         0
                text5                               27A      27A        8         0
                text4                               25E      25E       14         0
                text3                               23D      23D       21         0
                text2                               166      166       53         0
                text1                               1B9      1B9       4A         0
                maintext                             F7       F7       6F         0
                clrtext                             272      272        8         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         

        CLASS   COMMON         
                cstackCOMMON                         70       70        B         1
                bssCOMMON                            7D       7D        1         1
                nvCOMMON                             7B       7B        2         1

        CLASS   BANK0          
                cstackBANK0                          31       31        5         1
                bssBANK0                             20       20       11         1
                nvBANK0                              36       36        2         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       40         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00027E  000282         8       0  CODE        2
                bssBANK0                       000020  000018  000038        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000040  0000E0        A0       1  BANK1       1
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0038-006F             38           1
        BANK1            00E0-00EF             10           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0282-1FFF            800
        CONST            0003-0003              1           2
                         0282-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0282-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0038-006F             38           1
                         00E0-00EF             10
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0282-1FFF           1D7E
        STRING           0003-0003              1           2
                         0282-1FFF            100

                                  Symbol Table

Servo_nextStep@current_angle  cstackCOMMON 0072
Servo_setAngle@angle          cstackBANK0  0031
Servo_setAngle@servo          cstackBANK0  0033
Servo_setupSoftware@i         cstackBANK0  0031
USARTInit@baud_rate           cstackBANK0  0031
USARTWriteChar@ch             cstackBANK0  0031
USARTWriteInt@F1612           bssBANK0     0020
_BRG16                        (abs)        0C3B
_BRGH                         (abs)        04C2
_GIE                          (abs)        005F
_OSCCON                       (abs)        008F
_PEIE                         (abs)        005E
_PIR1bits                     (abs)        000C
_PORTA                        (abs)        0005
_PORTB                        (abs)        0006
_PORT_SERVOS                  bssCOMMON    007D
_RB1                          (abs)        0031
_RCIE                         (abs)        0465
_RCIF                         (abs)        0065
_RCREG                        (abs)        001A
_RCSTAbits                    (abs)        0018
_SERVO_counterGloblal         bssBANK0     002D
_SERVO_counterPrecision       bssBANK0     002E
_SERVO_pinPosition            bssBANK0     0029
_SERVO_us5_counter            bssBANK0     002B
_SPBRG                        (abs)        0099
_SPBRGH                       (abs)        009A
_Servo_nextStep               text7        0203
_Servo_setAngle               text4        025E
_Servo_setupSoftware          text3        023D
_T1CON                        (abs)        0010
_TMR1                         (abs)        000E
_TMR1IE                       (abs)        0460
_TMR1IF                       (abs)        0060
_TRISA                        (abs)        0085
_TRISB                        (abs)        0086
_TXREG                        (abs)        0019
_TXSTAbits                    (abs)        0098
_UQEnd                        nvCOMMON     007B
_UQFront                      nvCOMMON     007C
_URBuff                       bssBANK1     00A0
_USARTInit                    text2        0166
_USARTWriteChar               text5        027A
__CFG_BOR4V$BOR21V            (abs)        0000
__CFG_BOREN$OFF               (abs)        0000
__CFG_CP$OFF                  (abs)        0000
__CFG_CPD$OFF                 (abs)        0000
__CFG_DEBUG$OFF               (abs)        0000
__CFG_FCMEN$OFF               (abs)        0000
__CFG_FOSC$HS                 (abs)        0000
__CFG_IESO$OFF                (abs)        0000
__CFG_LVP$OFF                 (abs)        0000
__CFG_MCLRE$ON                (abs)        0000
__CFG_PWRTE$ON                (abs)        0000
__CFG_WDTE$OFF                (abs)        0000
__CFG_WRT$OFF                 (abs)        0000
__Habs1                       abs1         0000
__Hbank0                      bank0        0000
__Hbank1                      bank1        0000
__Hbank2                      bank2        0000
__Hbank3                      bank3        0000
__HbssBANK0                   bssBANK0     0000
__HbssBANK1                   bssBANK1     0000
__HbssCOMMON                  bssCOMMON    0000
__Hcinit                      cinit        0029
__Hclrtext                    clrtext      0000
__Hcode                       code         0000
__Hcommon                     common       0000
__Hconfig                     config       2009
__HcstackBANK0                cstackBANK0  0000
__HcstackCOMMON               cstackCOMMON 0000
__Heeprom_data                eeprom_data  0000
__Hend_init                   end_init     0015
__Hfunctab                    functab      0000
__Hidloc                      idloc        0000
__Hinit                       init         0012
__Hintentry                   intentry     0012
__Hmaintext                   maintext     0000
__HnvBANK0                    nvBANK0      0000
__HnvCOMMON                   nvCOMMON     0000
__Hpowerup                    powerup      0000
__Hram                        ram          0000
__Hreset_vec                  reset_vec    0003
__Hsfr0                       sfr0         0000
__Hsfr1                       sfr1         0000
__Hsfr2                       sfr2         0000
__Hsfr3                       sfr3         0000
__Hspace_0                    (abs)        2009
__Hspace_1                    (abs)        00E0
__Hspace_2                    (abs)        0000
__Hspace_3                    (abs)        0000
__Hstack                      stack        0000
__Hstrings                    strings      0000
__Htext                       text         0000
__Labs1                       abs1         0000
__Lbank0                      bank0        0000
__Lbank1                      bank1        0000
__Lbank2                      bank2        0000
__Lbank3                      bank3        0000
__LbssBANK0                   bssBANK0     0000
__LbssBANK1                   bssBANK1     0000
__LbssCOMMON                  bssCOMMON    0000
__Lcinit                      cinit        0015
__Lclrtext                    clrtext      0000
__Lcode                       code         0000
__Lcommon                     common       0000
__Lconfig                     config       2007
__LcstackBANK0                cstackBANK0  0000
__LcstackCOMMON               cstackCOMMON 0000
__Leeprom_data                eeprom_data  0000
__Lend_init                   end_init     0012
__Lfunctab                    functab      0000
__Lidloc                      idloc        0000
__Linit                       init         0012
__Lintentry                   intentry     0004
__Lmaintext                   maintext     0000
__LnvBANK0                    nvBANK0      0000
__LnvCOMMON                   nvCOMMON     0000
__Lpowerup                    powerup      0000
__Lram                        ram          0000
__Lreset_vec                  reset_vec    0000
__Lsfr0                       sfr0         0000
__Lsfr1                       sfr1         0000
__Lsfr2                       sfr2         0000
__Lsfr3                       sfr3         0000
__Lspace_0                    (abs)        0000
__Lspace_1                    (abs)        0000
__Lspace_2                    (abs)        0000
__Lspace_3                    (abs)        0000
__Lstack                      stack        0000
__Lstrings                    strings      0000
__Ltext                       text         0000
__S0                          (abs)        2009
__S1                          (abs)        00E0
__S2                          (abs)        0000
__S3                          (abs)        0000
___int_sp                     stack        0000
___latbits                    (abs)        0002
___sp                         stack        0000
__end_of_Servo_nextStep       text7        023D
__end_of_Servo_setAngle       text4        0272
__end_of_Servo_setupSoftware  text3        025E
__end_of_USARTInit            text2        01B9
__end_of_USARTWriteChar       text5        0282
__end_of__initialization      cinit        0025
__end_of_initialize           text1        0203
__end_of_interrumptions       text6        00F7
__end_of_main                 maintext     0166
__initialization              cinit        0015
__pbssBANK0                   bssBANK0     0020
__pbssBANK1                   bssBANK1     00A0
__pbssCOMMON                  bssCOMMON    007D
__pcstackBANK0                cstackBANK0  0031
__pcstackCOMMON               cstackCOMMON 0070
__pintentry                   intentry     0004
__pmaintext                   maintext     00F7
__pnvBANK0                    nvBANK0      0036
__pnvCOMMON                   nvCOMMON     007B
__ptext1                      text1        01B9
__ptext2                      text2        0166
__ptext3                      text3        023D
__ptext4                      text4        025E
__ptext5                      text5        027A
__ptext6                      text6        0029
__ptext7                      text7        0203
__size_of_Servo_nextStep      (abs)        0000
__size_of_Servo_setAngle      (abs)        0000
__size_of_Servo_setupSoftware (abs)        0000
__size_of_USARTInit           (abs)        0000
__size_of_USARTWriteChar      (abs)        0000
__size_of_initialize          (abs)        0000
__size_of_interrumptions      (abs)        0000
__size_of_main                (abs)        0000
_count_timer                  bssBANK0     0025
_initialize                   text1        01B9
_interrumptions               text6        0029
_main                         maintext     00F7
_mensaje                      bssBANK0     002F
_puerto_b                     bssBANK0     0030
_servo_angle_x                nvBANK0      0036
_servo_angle_y                nvBANK0      0037
btemp                         (abs)        007E
clear_ram0                    clrtext      0272
end_of_initialization         cinit        0025
interrupt_function            intentry     0004
intlevel0                     functab      0000
intlevel1                     functab      0000
intlevel2                     functab      0000
intlevel3                     functab      0000
intlevel4                     functab      0000
intlevel5                     functab      0000
ltemp                         (abs)        007E
ltemp0                        (abs)        007E
ltemp1                        (abs)        0082
ltemp2                        (abs)        0086
ltemp3                        (abs)        0080
reset_vec                     reset_vec    0000
saved_w                       (abs)        007E
stackhi                       (abs)        0000
stacklo                       (abs)        0000
start                         init         0012
start_initialization          cinit        0015
ttemp                         (abs)        007E
ttemp0                        (abs)        007E
ttemp1                        (abs)        0081
ttemp2                        (abs)        0084
ttemp3                        (abs)        0087
ttemp4                        (abs)        007F
wtemp                         (abs)        007E
wtemp0                        (abs)        007E
wtemp1                        (abs)        0080
wtemp2                        (abs)        0082
wtemp3                        (abs)        0084
wtemp4                        (abs)        0086
wtemp5                        (abs)        0088
wtemp6                        (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 47 in file "MainPICs.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_Servo_setAngle
		_USARTWriteChar
		_initialize
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initialize *****************
 Defined at:
		line 78 in file "MainPICs.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Servo_setAngle
		_Servo_setupSoftware
		_USARTInit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USARTInit *****************
 Defined at:
		line 31 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  baud_rate       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_initialize
 This function uses a non-reentrant model


 *************** function _Servo_setupSoftware *****************
 Defined at:
		line 5 in file "SoftwareServo.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_initialize
 This function uses a non-reentrant model


 *************** function _Servo_setAngle *****************
 Defined at:
		line 99 in file "SoftwareServo.c"
 Parameters:    Size  Location     Type
  servo           1    wreg     unsigned char 
  angle           1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  servo           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_initialize
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 77 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_USARTWriteString
		_USARTWriteLine
		_USARTWriteInt
		_USARTGotoNewLine
 This function uses a non-reentrant model


 *************** function _interrumptions *****************
 Defined at:
		line 121 in file "MainPICs.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          8       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Servo_nextStep
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _Servo_nextStep *****************
 Defined at:
		line 19 in file "SoftwareServo.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  current_angl    1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_interrumptions
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
usart_pic16.c
		_USARTWriteChar		CODE           	027A	0000	8
		_USARTInit     		CODE           	0166	0000	83

usart_pic16.c estimated size: 91

MainPICs.c
		_main          		CODE           	00F7	0000	111
		_initialize    		CODE           	01B9	0000	74
		_interrumptions		CODE           	0029	0000	206

MainPICs.c estimated size: 391

shared
		__initializatio		CODE           	0015	0000	16

shared estimated size: 16

SoftwareServo.c
		_Servo_setupSof		CODE           	023D	0000	33
		_Servo_setAngle		CODE           	025E	0000	20
		_Servo_nextStep		CODE           	0203	0000	58

SoftwareServo.c estimated size: 111

